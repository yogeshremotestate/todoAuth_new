definitions:
  models.Note:
    properties:
      body:
        type: string
      createdAt:
        type: string
      deletedAt:
        description: Optional for soft delete, if needed
        type: string
      id:
        type: integer
      title:
        type: string
      updatedAt:
        type: string
      userID:
        type: integer
    type: object
  models.NoteBody:
    properties:
      body:
        type: string
      title:
        type: string
    type: object
  models.UserBody:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: Testing Swagger APIs.
  termsOfService: http://google.com/
  title: TODO APIs
  version: "1.0"
paths:
  /notes:
    get:
      consumes:
      - application/json
      description: Retrieve all notes for the logged-in user
      produces:
      - application/json
      responses:
        "200":
          description: List of Notes
          schema:
            items:
              $ref: '#/definitions/models.Note'
            type: array
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Get All Notes
      tags:
      - notes
    post:
      consumes:
      - application/json
      description: Create a new note for the logged-in user
      parameters:
      - description: Create Note
        in: body
        name: note
        required: true
        schema:
          $ref: '#/definitions/models.NoteBody'
      produces:
      - application/json
      responses:
        "201":
          description: Note Created Successfully
          schema:
            $ref: '#/definitions/models.Note'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Create Note
      tags:
      - notes
  /notes/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a specific note by its ID
      parameters:
      - description: Note ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Note Deleted Successfully
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Delete Note
      tags:
      - notes
    get:
      consumes:
      - application/json
      description: Retrieve a specific note by its ID
      parameters:
      - description: Note ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Retrieved Note
          schema:
            $ref: '#/definitions/models.Note'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Get Note
      tags:
      - notes
    put:
      consumes:
      - application/json
      description: Update an existing note by its ID
      parameters:
      - description: Note ID
        in: path
        name: id
        required: true
        type: integer
      - description: Update Note
        in: body
        name: note
        required: true
        schema:
          $ref: '#/definitions/models.NoteBody'
      produces:
      - application/json
      responses:
        "200":
          description: Note Updated Successfully
          schema:
            $ref: '#/definitions/models.Note'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Update Note
      tags:
      - notes
  /user/login:
    post:
      consumes:
      - application/json
      description: Authenticate a user and return a token
      parameters:
      - description: Login Credentials
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.UserBody'
      produces:
      - application/json
      responses:
        "200":
          description: Token
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
      summary: LoginUser
      tags:
      - user
  /user/signup:
    post:
      consumes:
      - application/json
      description: Register User new account
      parameters:
      - description: Signup Credentials
        in: body
        name: credentials
        required: true
        schema:
          $ref: '#/definitions/models.UserBody'
      produces:
      - application/json
      responses:
        "201":
          description: User Created Successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "409":
          description: Conflict - Email Already Exists
          schema:
            additionalProperties:
              type: string
            type: object
      summary: SignUpUser
      tags:
      - user
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
